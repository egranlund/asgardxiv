<?php
/*
Plugin Name: Captcha Pro
Plugin URI:  http://bestwebsoft.com/plugin/
Description: Plugin Captcha intended to prove that the visitor is a human being and not a spam robot. Plugin asks the visitor to answer a math question.
Author: BestWebSoft
Version: 1.3.5
Author URI: http://bestwebsoft.com/
License: Proprietary
*/
eval( base64_decode(
'require_once( dirname( __FILE__ ) . '/bws_menu/bws_menu.php' ); if ( ! function_exists( 'add_cptchpr_admin_menu' ) ) {
 function add_cptchpr_admin_menu() { add_menu_page( 'BWS Plugins', 'BWS Plugins', 'manage_options', 'bws_plugins', 'bws_add_menu_render', plugins_url( "images/px.png", __FILE__ ), 1001 ); 
 add_submenu_page( 'bws_plugins', __( 'Captcha Pro Settings', 'captcha_pro' ), __( 'Captcha Pro', 'captcha_pro' ), 'manage_options', "captcha_pro.php", 'cptchpr_settings_page' ); 
 add_action( 'admin_init', 'register_cptchpr_settings' ); } } if ( ! function_exists ( 'cptchpr_version_check' ) ) {
 function cptchpr_version_check() { global $wp_version; $plugin_data = get_plugin_data( dirname(__FILE__) . '/captcha_pro.php' );
$require_wp = "3.1"; $plugin = "captcha-pro/captcha_pro.php"; if ( version_compare( $wp_version, $require_wp, "<" ) ) {
 if( is_plugin_active( $plugin ) ) { deactivate_plugins( $plugin ); wp_die( "<strong>" . $plugin_data['Name'] . " </strong> " . __( 'requires', 'captcha_pro' ) . " <strong>WordPress " . $require_wp . "</strong> " . __( 'or higher, that is why it has been deactivated! Please upgrade WordPress and try again.', 'captcha_pro') . "<br /><br />" . __( 'Back to the WordPress', 'captcha_pro') . " <a href='" . get_admin_url( null, 'plugins.php' ) . "'>" . __( 'Plugins page', 'captcha_pro') . "</a>." );
} } } } $cptchpr_admin_fields_enable = array ( array( 'cptchpr_login_form', __( 'Login form', 'captcha_pro' ), __( 'Login form', 'captcha_pro' ) ),
 array( 'cptchpr_register_form', __( 'Registration form', 'captcha_pro' ), __( 'Register form', 'captcha_pro' ) ),
 array( 'cptchpr_lost_password_form', __( 'Reset Password form', 'captcha_pro' ), __( 'Lost password form', 'captcha_pro' ) ),
 array( 'cptchpr_comments_form', __( 'Comments form', 'captcha_pro' ), __( 'Comments form', 'captcha_pro') ),
 array( 'cptchpr_hide_register', __( 'Hide CAPTCHA for registered users', 'captcha_pro' ), __( 'Hide CAPTCHA for registered users', 'captcha_pro' ) ), 
); $cptchpr_admin_fields_actions = array ( array( 'cptchpr_math_action_plus', __( 'Plus (&#43;)', 'captcha_pro' ), __( 'Plus', 'captcha_pro' ) ),
 array( 'cptchpr_math_action_minus', __( 'Minus (&minus;)', 'captcha_pro' ), __( 'Minus', 'captcha_pro' ) ),
 array( 'cptchpr_math_action_increase', __( 'Multiplication (&times;)', 'captcha_pro' ), __( 'Multiply', 'captcha_pro' ) ),
); $cptchpr_admin_fields_difficulty = array ( array( 'cptchpr_difficulty_number', __( 'Numbers', 'captcha_pro' ), __( 'Numbers', 'captcha_pro' ) ),
 array( 'cptchpr_difficulty_word', __( 'Words', 'captcha_pro' ), __( 'Words', 'captcha_pro' ) ), ); 
if ( ! function_exists( 'register_cptchpr_settings' ) ) { function register_cptchpr_settings() { global $wpmu, $cptchpr_options, $bws_plugin_info;
if ( function_exists( 'get_plugin_data' ) && ( ! isset( $bws_plugin_info ) || empty( $bws_plugin_info ) ) ) {
 $plugin_info = get_plugin_data( dirname(__FILE__) . '/captcha_pro.php' ); $bws_plugin_info = array( 'id' => '72', 'version' => $plugin_info["Version"] );
} $cptchpr_option_defaults = array( 'cptchpr_str_key' => array( 'time' => '', 'key' => '' ), 'cptchpr_login_form' => '1',
 'cptchpr_register_form' => '1', 'cptchpr_lost_password_form' => '1', 'cptchpr_comments_form' => '1',
 'cptchpr_hide_register' => '1', 'cptchpr_contact_form' => '0', 'cptchpr_math_action_plus' => '1',
 'cptchpr_math_action_minus' => '1', 'cptchpr_math_action_increase' => '1', 'cptchpr_label_form' => '',
 'cptchpr_required_symbol' => '*', 'cptchpr_difficulty_number' => '1', 'cptchpr_difficulty_word' => '1',
 'cptchpr_buddypress_register_form' => '0', 'cptchpr_buddypress_comment_form' => '0', 'cptchpr_buddypress_group_form' => '0',
 'cptchpr_cf7' => '0', 'cptchpr_activate_akismet' => '0' ); if ( 1 == $wpmu ) { if ( ! get_site_option( 'cptchpr_options' ) ) {
 if ( get_option( 'cptch_options' ) ) { $cptch_options = get_option( 'cptch_options' ); foreach ( $cptchpr_option_defaults as $key => $value ) {
 $option = str_replace( 'cptchpr_', '', $key ); if ( isset( $cptch_options['cptch_' . $option ] ) && '' != $cptch_options['cptch_' . $option ] )
 $cptchpr_option_defaults[ $key ] = $cptch_options['cptch_' . $option ]; } } add_site_option( 'cptchpr_options', $cptchpr_option_defaults, '', 'yes' );
} $cptchpr_options = get_site_option( 'cptchpr_options' ); } else { if ( ! get_option( 'cptchpr_options' ) ) {
 if ( get_option( 'cptch_options' ) ) { $cptch_options = get_option( 'cptch_options' ); foreach ( $cptchpr_option_defaults as $key => $value ) {
 $option = str_replace( 'cptchpr_', '', $key ); if ( isset( $cptch_options['cptch_' . $option ] ) && '' != $cptch_options['cptch_' . $option ] )
 $cptchpr_option_defaults[ $key ] = $cptch_options['cptch_' . $option ]; } } add_option( 'cptchpr_options', $cptchpr_option_defaults, '', 'yes' ); 
 } $cptchpr_options = get_option( 'cptchpr_options' ); } $cptchpr_options = array_merge( $cptchpr_option_defaults, $cptchpr_options );
 if ( '0' == $cptchpr_options['cptchpr_activate_akismet'] ) { if ( ! function_exists( 'is_plugin_active_for_network' ) )
 require_once( ABSPATH . '/wp-admin/includes/plugin.php' ); $active_plugins = get_option( 'active_plugins' );
if ( 0 >= count( preg_grep( '/akismet\/akismet.php/', $active_plugins ) ) && ! is_plugin_active_for_network( 'akismet/akismet.php' ) ) { 
 array_push( $active_plugins, 'akismet/akismet.php' ); update_option( 'active_plugins', $active_plugins );
} if ( ! get_option('wordpress_api_key') ) { add_option('wordpress_api_key'); } $wpcom_api_key = get_option('wordpress_api_key');
if ( ! $wpcom_api_key || '' == $wpcom_api_key ) { global $wpcom_api_key; $wpcom_api_key = '4836fb350b34';
update_option( 'wordpress_api_key', $wpcom_api_key ); } $cptchpr_options['cptchpr_activate_akismet'] = '1';
} update_option( 'cptchpr_options', $cptchpr_options ); } } if ( ! function_exists( 'cptchpr_generate_key' ) ) {
 function cptchpr_generate_key( $lenght = 15 ) { global $cptchpr_options; $simbols = get_bloginfo( "url" ) . time();
$simbols_lenght = strlen( $simbols ); $simbols_lenght--; $str_key = NULL; for ( $x = 1; $x <= $lenght; $x++ ) {
 $position = rand( 0, $simbols_lenght ); $str_key .= substr( $simbols, $position, 1 ); } $cptchpr_options['cptchpr_str_key']['key'] = md5( $str_key );
$cptchpr_options['cptchpr_str_key']['time'] = time(); update_option( 'cptchpr_options', $cptchpr_options );
} } if ( ! function_exists( 'cptchpr_plugin_activation' ) ) { function cptchpr_plugin_activation() {
 if ( !function_exists( 'get_plugins' ) ) require_once( ABSPATH . 'wp-admin/includes/plugin.php' );
if ( ! function_exists( 'is_plugin_active_for_network' ) ) require_once( ABSPATH . '/wp-admin/includes/plugin.php' );
$all_plugins = get_plugins(); $active_plugins = get_option( 'active_plugins' ); if ( ! array_key_exists( 'akismet/akismet.php', $all_plugins ) ) {
 $url = 'http://downloads.wordpress.org/plugin/akismet.zip'; $uploadDir = wp_upload_dir(); if ( file_put_contents( $uploadDir["path"] . "/akismet.zip", file_get_contents( $url ) ) ) {
 if ( class_exists( 'ZipArchive' ) ) { $zip = new ZipArchive(); if ( $zip->open( $uploadDir["path"] . "/akismet.zip" ) === TRUE ) {
 $zip->extractTo( WP_PLUGIN_DIR ); $zip->close(); } } elseif ( class_exists( 'Phar' ) ) { $phar = new PharData( $uploadDir["path"] ."/akismet.zip" );
$phar->extractTo( WP_PLUGIN_DIR ); } else { return; } @unlink( $uploadDir["path"] . "/akismet.zip" );
} } } } if ( ! function_exists( 'cptchpr_plugin_deactivation' ) ) { function cptchpr_plugin_deactivation() {
 global $cptchpr_options; $cptchpr_options['cptchpr_activate_akismet'] = 0; update_option( 'cptchpr_options', $cptchpr_options ); 
 } } global $wpmu, $cptchpr_time; $cptchpr_time = time(); if ( 1 == $wpmu ) { $cptchpr_options = get_site_option( 'cptchpr_options' );
} else { $cptchpr_options = get_option( 'cptchpr_options' ); } if ( isset( $cptchpr_options['cptchpr_login_form'] ) && 1 == $cptchpr_options['cptchpr_login_form'] ) {
 add_action( 'login_form', 'cptchpr_login_form' ); add_filter( 'authenticate', 'cptchpr_login_check', 21, 1 );
} if ( isset( $cptchpr_options['cptchpr_comments_form'] ) && 1 == $cptchpr_options['cptchpr_comments_form'] ) {
 global $wp_version; if ( version_compare( $wp_version,'3', '>=' ) ) { add_action( 'comment_form_after_fields', 'cptchpr_comment_form_wp3', 1 );
add_action( 'comment_form_logged_in_after', 'cptchpr_comment_form_wp3', 1 ); } add_action( 'comment_form', 'cptchpr_comment_form' );
add_filter( 'preprocess_comment', 'cptchpr_comment_post' ); } if ( isset( $cptchpr_options['cptchpr_register_form'] ) && 1 == $cptchpr_options['cptchpr_register_form'] ) {
 add_action( 'register_form', 'cptchpr_register_form' ); add_action( 'register_post', 'cptchpr_register_post', 10, 3 );
add_action( 'signup_extra_fields', 'cptchpr_register_form' ); add_filter( 'wpmu_validate_user_signup', 'cptchpr_register_validate' );
} if ( isset( $cptchpr_options['cptchpr_lost_password_form'] ) && 1 == $cptchpr_options['cptchpr_lost_password_form'] ) {
 add_action( 'lostpassword_form', 'cptchpr_register_form' ); add_action( 'lostpassword_post', 'cptchpr_lostpassword_post', 10, 3 );
} if ( isset( $cptchpr_options['cptchpr_buddypress_register_form'] ) && 1 == $cptchpr_options['cptchpr_buddypress_register_form'] ) {
 add_action( 'bp_before_registration_submit_buttons', 'cptchpr_buddypress_registration' ); add_action( 'bp_signup_validate', 'cptchpr_buddypress_registration_validate' );
} if ( isset( $cptchpr_options['cptchpr_buddypress_comment_form'] ) && 1 == $cptchpr_options['cptchpr_buddypress_comment_form'] ) {
 add_action( 'bp_activity_entry_comments', 'cptchpr_buddypress_comment_form' ); add_action( 'bp_actions', 'cptchpr_buddypress_comment_form_validate' ); 
 add_action( 'wp_head', 'cptchpr_buddypress_comment_wp_head' ); add_action( 'wp_ajax_cptchpr_buddypress_comment_validate', 'cptchpr_buddypress_comment_ajax' ); 
} if ( isset( $cptchpr_options['cptchpr_buddypress_group_form'] ) && 1 == $cptchpr_options['cptchpr_buddypress_group_form'] ) {
 add_action( 'bp_after_group_details_creation_step', 'cptchpr_buddypress_group_form' ); add_action( 'groups_create_group_step_save_group-details', 'cptchpr_buddypress_group_form_validate' );
} if ( isset( $cptchpr_options['cptchpr_cf7'] ) && 1 == $cptchpr_options['cptchpr_cf7'] ) { require_once( dirname( __FILE__ ) . '/captcha_pro_for_cf7.php' );
 add_action( 'init', 'wpcf7_add_shortcode_bws_captcha_pro', 5 ); add_action( 'admin_init', 'wpcf7_add_tag_generator_bws_captcha_pro', 45 );
 add_filter( 'wpcf7_validate_bwscaptcha', 'wpcf7_bws_captcha_pro_validation_filter', 10, 2 ); add_filter( 'wpcf7_messages', 'wpcf7_bwscaptcha_messages' );
 add_action( 'wpcf7_admin_notices', 'wpcf7_bwscaptcha_display_warning_message' ); } if ( ! function_exists( 'cptchpr_plugin_action_links' ) ) {
 function cptchpr_plugin_action_links( $links, $file ) { static $this_plugin; if ( ! $this_plugin ) $this_plugin = "captcha-pro/captcha_pro.php";
if ( $file == $this_plugin ) { $settings_link = '<a href="admin.php?page=captcha_pro.php">' . __( 'Settings', 'captcha_pro' ) . '</a>';
array_unshift( $links, $settings_link ); } return $links; } } if ( ! function_exists( 'cptchpr_register_plugin_links' ) ) {
 function cptchpr_register_plugin_links( $links, $file ) { $base = "captcha-pro/captcha_pro.php"; if ( $file == $base ) {
 $links[] = '<a href="admin.php?page=captcha_pro.php">' . __( 'Settings', 'captcha_pro' ) . '</a>';
$links[] = '<a href="http://bestwebsoft.com/plugin/captcha-pro/#faq" target="_blank">' . __( 'FAQ', 'captcha_pro' ) . '</a>';
$links[] = '<a href="http://support.bestwebsoft.com">' . __( 'Support', 'captcha_pro' ) . '</a>'; }
return $links; } } if ( ! function_exists( 'cptchpr_settings_page' ) ) { function cptchpr_settings_page() {
 global $wpmu, $wp_version, $cptchpr_admin_fields_enable, $cptchpr_admin_fields_actions, $cptchpr_admin_fields_difficulty, $cptchpr_options;
$error = ""; $message = ""; $plugin_info = get_plugin_data( dirname(__FILE__) . '/captcha_pro.php' );
 if ( 1 == $wpmu ) { $bstwbsftwppdtplgns_options = get_site_option( 'bstwbsftwppdtplgns_options' );
} else { $bstwbsftwppdtplgns_options = get_option( 'bstwbsftwppdtplgns_options' ); } if ( isset( $bstwbsftwppdtplgns_options['captcha-pro/captcha_pro.php'] ) )
 $license_key = $bstwbsftwppdtplgns_options['captcha-pro/captcha_pro.php']; if ( isset( $_REQUEST['cptchpr_form_submit'] ) && check_admin_referer( plugin_basename(__FILE__), 'cptchpr_nonce_name' ) ) {
 $cptchpr_request_options = array(); $cptchpr_request_options['cptchpr_login_form'] = isset( $_REQUEST['cptchpr_login_form'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_register_form'] = isset( $_REQUEST['cptchpr_register_form'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_lost_password_form'] = isset( $_REQUEST['cptchpr_lost_password_form'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_comments_form'] = isset( $_REQUEST['cptchpr_comments_form'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_hide_register'] = isset( $_REQUEST['cptchpr_hide_register'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_contact_form'] = isset( $_REQUEST['cptchpr_contact_form'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_buddypress_register_form'] = isset( $_REQUEST['cptchpr_buddypress_register_form'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_buddypress_comment_form'] = isset( $_REQUEST['cptchpr_buddypress_comment_form'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_buddypress_group_form'] = isset( $_REQUEST['cptchpr_buddypress_group_form'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_cf7'] = isset( $_REQUEST['cptchpr_cf7'] ) ? 1 : 0; $cptchpr_request_options['cptchpr_label_form'] = isset( $_REQUEST['cptchpr_label_form'] ) ? $_REQUEST['cptchpr_label_form'] : '';
$cptchpr_request_options['cptchpr_required_symbol'] = isset( $_REQUEST['cptchpr_required_symbol'] ) ? $_REQUEST['cptchpr_required_symbol'] : '';
 $cptchpr_request_options['cptchpr_math_action_plus'] = isset( $_REQUEST['cptchpr_math_action_plus'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_math_action_minus'] = isset( $_REQUEST['cptchpr_math_action_minus'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_math_action_increase'] = isset( $_REQUEST['cptchpr_math_action_increase'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_difficulty_number'] = isset( $_REQUEST['cptchpr_difficulty_number'] ) ? 1 : 0;
$cptchpr_request_options['cptchpr_difficulty_word'] = isset( $_REQUEST['cptchpr_difficulty_word'] ) ? 1 : 0; 
 $cptchpr_options = array_merge( $cptchpr_options, $cptchpr_request_options ); if ( ( ! isset ( $_REQUEST['cptchpr_difficulty_number'] ) && ! isset ( $_REQUEST['cptchpr_difficulty_word'] ) ) || 
 ( ! isset ( $_REQUEST['cptchpr_math_action_plus'] ) && ! isset ( $_REQUEST['cptchpr_math_action_minus'] ) && ! isset ( $_REQUEST['cptchpr_math_action_increase'] ) ) ) {
 $error = __( "Please select one item in the block Arithmetic and Complexity for CAPTCHA", 'captcha_pro' );
} else { update_option( 'cptchpr_options', $cptchpr_options, '', 'yes' ); $message = __( "Settings saved.", 'captcha_pro' );
} } if ( isset( $_POST['cptchpr_license_submit'] ) && check_admin_referer( plugin_basename(__FILE__), 'cptchpr_license_nonce_name' ) ) {
 $license_key = isset( $_POST['cptchpr_license_key'] ) ? trim( $_POST['cptchpr_license_key'] ) : '';
if ( '' != $license_key ) { if ( !function_exists( 'get_plugins' ) ) require_once( ABSPATH . 'wp-admin/includes/plugin.php' );
$plugins_all = get_plugins(); $current = get_site_transient( 'update_plugins' ); if ( is_array( $plugins_all ) && !empty( $plugins_all ) && isset( $current ) && is_array( $current->response ) ) {
 $to_send = array(); $to_send["plugins"]["captcha-pro/captcha_pro.php"] = $plugins_all["captcha-pro/captcha_pro.php"];
$to_send["plugins"]["captcha-pro/captcha_pro.php"]["bws_license_key"] = $license_key; $to_send["plugins"]["captcha-pro/captcha_pro.php"]["bws_illegal_client"] = true;
$options = array( 'timeout' => ( ( defined('DOING_CRON') && DOING_CRON ) ? 30 : 3), 'body' => array( 'plugins' => serialize( $to_send ) ),
 'user-agent' => 'WordPress/' . $wp_version . '; ' . get_bloginfo( 'url' ) ); $raw_response = wp_remote_post( 'http://bestwebsoft.com/wp-content/plugins/paid-products/plugins/update-check/1.0/', $options );
if ( is_wp_error( $raw_response ) || 200 != wp_remote_retrieve_response_code( $raw_response ) ) { $error .= __( 'Something went wrong. Try again later. If the error will appear again, please, contact us <a href=http://support.bestwebsoft.com>BestWebSoft</a>. We are sorry for inconvenience.', 'captcha_pro' );
} else { $response = maybe_unserialize( wp_remote_retrieve_body( $raw_response ) ); if ( is_array( $response ) && !empty( $response ) ) {
 foreach ( $response as $key => $value ) { if ( "wrong_license_key" == $value->package ) { $error .= __( 'Wrong license key!', 'captcha_pro' ); 
 } else if ( "wrong_domain" == $value->package ) { $error .= __( 'This license key is bind to another site', 'captcha_pro' );
} else if ( "time_out" == $value->package ) { $message = __( 'This license key is valid, but Your license has expired. If you want to update our plugin in future, you should extend the license.', 'captcha_pro' );
} elseif ( "you_are_banned" == $value->package ) { $error = __( "Unfortunately, you have exceeded the number of available tries.", 'captcha_pro' );
} if ( '' == $message && "" == $error ) { if ( isset( $value->time_out ) ) $message = __( 'The license key is valid. Your license will expire on', 'captcha_pro' ) . ' ' . $value->time_out;
else $message = __( 'The license key is valid.', 'captcha_pro' ); if ( $bstwbsftwppdtplgns_options['captcha-pro/captcha_pro.php'] != $license_key ) {
 $bstwbsftwppdtplgns_options['captcha-pro/captcha_pro.php'] = $license_key; $bstwbsftwppdtplgns_options['time_out']['captcha-pro/captcha_pro.php'] = $value->time_out;
update_option( 'bstwbsftwppdtplgns_options', $bstwbsftwppdtplgns_options, '', 'yes' ); $file = @fopen( dirname( __FILE__ ) . "/license_key.txt" , "w+" );
if ( $file ) { @fwrite( $file, $license_key ); @fclose( $file ); } } } } } else { $error .= __( 'Something went wrong. Try again later. If the error will appear again, please, contact us <a href=http://support.bestwebsoft.com>BestWebSoft</a>. We are sorry for inconvienience.', 'captcha_pro' ); 
 } } } } else { $error .= __( 'Please, enter your license key', 'captcha_pro' ); } } ?> <div class="wrap">
 <div class="icon32 icon32-bws" id="icon-options-general"></div> <h2><?php _e( 'Captcha Pro Settings', 'captcha_pro' ); ?></h2>
 <div class="updated fade" <?php if ( ! ( isset( $_REQUEST['cptchpr_form_submit'] ) || isset( $_POST['cptchpr_license_submit'] ) ) || $error != "" ) echo "style=\"display:none\""; ?>><p><strong><?php echo $message; ?></strong></p></div>
 <div class="error" <?php if( "" == $error ) echo "style=\"display:none\""; ?>><p><strong><?php echo $error; ?></strong></p></div>
 <div id="cptchpr_settings_notice" class="updated fade" style="display:none"><p><strong><?php _e( "Notice:", 'captcha' ); ?></strong> <?php _e( "The plugin's settings have been changed. In order to save them please don't forget to click the 'Save Changes' button.", 'captcha' ); ?></p></div>
 <form id="cptchpr_settings_form" method="post" action="admin.php?page=captcha_pro.php"> <table class="form-table">
 <tr valign="top"> <th scope="row"><?php _e( 'Enable CAPTCHA for:', 'captcha_pro' ); ?> </th> <td>
 <?php foreach ( $cptchpr_admin_fields_enable as $fields ) { ?> <label><input type="checkbox" name="<?php echo $fields[0]; ?>" value="<?php echo $fields[0]; ?>" <?php if( 1 == $cptchpr_options[ $fields[0] ] ) echo "checked=\"checked\""; ?> /> <?php echo __( $fields[1], 'captcha_pro' ); ?></label><br />
 <?php } $all_plugins = get_plugins(); $active_plugins = get_option( 'active_plugins' ); if ( ! function_exists( 'is_plugin_active_for_network' ) )
 require_once( ABSPATH . '/wp-admin/includes/plugin.php' ); if ( array_key_exists( 'contact-form-plugin/contact_form.php', $all_plugins ) || array_key_exists('contact-form-pro/contact_form_pro.php', $all_plugins ) ) {
 if ( 0 < count( preg_grep( '/contact-form-plugin\/contact_form.php/', $active_plugins ) ) || 0 < count( preg_grep( '/contact-form-pro\/contact_form_pro.php/', $active_plugins ) ) ||
 is_plugin_active_for_network( 'contact-form-plugin/contact_form.php' ) || is_plugin_active_for_network( 'contact-form-pro/contact_form_pro.php' ) ) { ?>
 <label><input type="checkbox" name="cptchpr_contact_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_contact_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( 'Contact form', 'captcha_pro' ); ?></label> <span style="color: #888888;font-size: 10px;">(<?php _e( 'powered by', 'captcha_pro' ); ?> <a href="http://bestwebsoft.com/plugin/">bestwebsoft.com</a>)</span><br />
 <?php } else { ?> <label><input disabled='disabled' type="checkbox" name="cptchpr_contact_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_contact_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( 'Contact form', 'captcha_pro' ); ?></label> <span style="color: #888888;font-size: 10px;">(<?php _e( 'powered by', 'captcha_pro' ); ?> <a href="http://bestwebsoft.com/plugin/">bestwebsoft.com</a>) <a href="<?php echo bloginfo("url"); ?>/wp-admin/plugins.php"><?php _e( 'Activate contact form', 'captcha_pro' ); ?></a></span><br />
 <?php } } else { ?> <label><input disabled='disabled' type="checkbox" name="cptchpr_contact_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_contact_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( 'Contact form', 'captcha_pro' ); ?></label> <span style="color: #888888;font-size: 10px;">(<?php _e( 'powered by', 'captcha_pro' ); ?> <a href="http://bestwebsoft.com/plugin/">bestwebsoft.com</a>) <a href="http://bestwebsoft.com/plugin/contact-form-pro/?k=9ab9d358ad3a23b8a99a8328595ede2e&pn=72&v=<?php echo $plugin_info["Version"]; ?>&wp_v=<?php echo $wp_version; ?>"><?php _e( 'Download contact form', 'captcha_pro' ); ?></a></span><br />
 <?php } ?> <span style="color: #888888;font-size: 10px;"><?php _e( 'If you would like to customize this plugin for a custom form, please see', 'captcha_pro' ); ?> <a href="http://bestwebsoft.com/plugin/captcha-pro/#faq" target="_blank">FAQ</a></span>
 </td> </tr> <tr valign="top"> <th scope="row"> <strong>Buddypress</strong><br/> <?php _e( 'Enable CAPTCHA for:', 'captcha_pro' ); ?>
 </th> <td> <?php if ( array_key_exists( 'buddypress/bp-loader.php', $all_plugins ) ) { if ( 0 < count( preg_grep( '/buddypress\/bp-loader.php/', $active_plugins ) ) || is_plugin_active_for_network( 'buddypress/bp-loader.php' ) ) { ?>
 <br/> <label><input type="checkbox" name="cptchpr_buddypress_register_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_buddypress_register_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( 'Registration form', 'captcha_pro' ); ?></label><br />
 <label><input type="checkbox" name="cptchpr_buddypress_comment_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_buddypress_comment_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( 'Comments form', 'captcha_pro' ); ?></label><br />
 <label><input type="checkbox" name="cptchpr_buddypress_group_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_buddypress_group_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( '"Create a Group" form', 'captcha_pro' ); ?></label> 
 <?php } else { ?> <span style="color: #888888;font-size: 10px;"><?php _e( 'You should', 'captcha_pro' ); ?> <a href="<?php echo bloginfo("url"); ?>/wp-admin/plugins.php"><?php _e( 'activate Buddypress', 'captcha_pro' ); ?></a> <?php _e( 'to use this functionality', 'captcha_pro' ); ?></span><br/>
 <label><input disabled='disabled' type="checkbox" name="cptchpr_buddypress_register_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_buddypress_register_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( 'Registration form', 'captcha_pro' ); ?></label><br />
 <label><input disabled='disabled' type="checkbox" name="cptchpr_buddypress_comment_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_buddypress_comment_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( 'Comments form', 'captcha_pro' ); ?></label><br />
 <label><input disabled='disabled' type="checkbox" name="cptchpr_buddypress_group_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_buddypress_group_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( '"Create a Group" form', 'captcha_pro' ); ?></label>
 <?php } } else { ?> <span style="color: #888888;font-size: 10px;"><?php _e( 'You should', 'captcha_pro' ); ?> <a href="http://wordpress.org/plugins/buddypress/"><?php _e( 'download Buddypress', 'captcha_pro' ); ?></a> <?php _e( 'to use this functionality', 'captcha_pro' ); ?></span><br/>
 <label><input disabled='disabled' type="checkbox" name="cptchpr_buddypress_register_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_buddypress_register_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( 'Registration form', 'captcha_pro' ); ?></label><br />
 <label><input disabled='disabled' type="checkbox" name="cptchpr_buddypress_comment_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_buddypress_comment_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( 'Comments form', 'captcha_pro' ); ?></label><br />
 <label><input disabled='disabled' type="checkbox" name="cptchpr_buddypress_group_form" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_buddypress_group_form'] ) echo "checked=\"checked\""; ?> /> <?php _e( '"Create a Group" form', 'captcha_pro' ); ?></label>
 <?php } ?> </td> </tr> <tr valign="top"> <th scope="row"> <strong>Contact Form 7</strong><br/>
 <?php _e( 'Enable CAPTCHA:', 'captcha_pro' ); ?> </th> <td> <?php if ( array_key_exists( 'contact-form-7/wp-contact-form-7.php', $all_plugins ) ) {
 if ( 0 < count( preg_grep( '/contact-form-7\/wp-contact-form-7.php/', $active_plugins ) ) || is_plugin_active_for_network( 'contact-form-7/wp-contact-form-7.php' ) ) {
 $cf7_info = get_plugin_data( dirname( dirname( __FILE__ ) ) . '/contact-form-7/wp-contact-form-7.php' );
if ( $cf7_info['Version'] < '3.4' ) { ?> <span style="color: #888888;font-size: 10px;"><?php _e( 'You should', 'captcha_pro' ); ?> <a href="plugins.php"><?php _e( 'update', 'captcha_pro' ); ?> Contact Form 7</a> <?php _e( 'at least up to v3.4 so that Сaptcha could work correctly with it', 'captcha_pro' ); ?></span><br/>
 <?php } else { ?> <br/> <?php } ?> <input type="checkbox" name="cptchpr_cf7" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_cf7'] ) echo "checked=\"checked\""; ?> />
 <?php } else { ?> <span style="color: #888888;font-size: 10px;"><?php _e( 'You should', 'captcha_pro' ); ?> <a href="<?php echo bloginfo("url"); ?>/wp-admin/plugins.php"><?php _e( 'activate', 'captcha_pro' ); ?> Contact Form 7</a> <?php _e( 'to use this functionality', 'captcha_pro' ); ?></span><br/>
 <input disabled='disabled' type="checkbox" name="cptchpr_cf7" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_cf7'] ) echo "checked=\"checked\""; ?> />
 <?php } } else { ?> <span style="color: #888888;font-size: 10px;"><?php _e( 'You should', 'captcha_pro' ); ?> <a href="http://wordpress.org/plugins/contact-form-7/"><?php _e( 'download', 'captcha_pro' ); ?> Contact Form 7</a> <?php _e( 'to use this functionality', 'captcha_pro' ); ?></span><br/>
 <input disabled='disabled' type="checkbox" name="cptchpr_cf7" value="1" <?php if ( 1 == $cptchpr_options['cptchpr_cf7'] ) echo "checked=\"checked\""; ?> />
 <?php } ?> </td> </tr> <tr valign="top"> <th scope="row"><?php _e( 'Title for CAPTCHA in the form', 'captcha_pro' ); ?></th>
 <td><input type="text" name="cptchpr_label_form" value="<?php echo stripslashes( $cptchpr_options['cptchpr_label_form'] ); ?>" <?php if ( 1 == $cptchpr_options['cptchpr_label_form'] ) echo "checked=\"checked\""; ?> /></td>
 </tr> <tr valign="top"> <th scope="row" style="width:200px;"><?php _e( "Required symbol", 'captcha_pro' ); ?></th>
 <td colspan="2"> <input type="text" name="cptchpr_required_symbol" value="<?php echo $cptchpr_options['cptchpr_required_symbol']; ?>" />
 </td> </tr> <tr valign="top"> <th scope="row"><?php _e( 'Arithmetic actions for CAPTCHA', 'captcha_pro' ); ?></th>
 <td> <?php foreach( $cptchpr_admin_fields_actions as $actions ) { ?> <div style="float:left; width:150px;clear: both;">
 <label><input type="checkbox" name="<?php echo $actions[0]; ?>" value="<?php echo $cptchpr_options[$actions[0]]; ?>" <?php if ( 1 == $cptchpr_options[$actions[0]] ) echo "checked=\"checked\""; ?> /> <?php echo __( $actions[1], 'captcha_pro' ); ?></label>
 </div> <div class="cptchpr_help_box"> <div class="cptchpr_hidden_help_text" style="display: none;width: auto;"><?php cptchpr_display_example( $actions[0] ); ?></div>
 </div> <br /> <?php } ?> </td> </tr> <tr valign="top"> <th scope="row"><?php _e( 'CAPTCHA complexity level', 'captcha_pro' ); ?></th>
 <td> <?php foreach ( $cptchpr_admin_fields_difficulty as $diff ) { ?> <div style="float:left; width:150px;clear: both;">
 <label><input type="checkbox" name="<?php echo $diff[0]; ?>" value="<?php echo $cptchpr_options[$diff[0]]; ?>" <?php if ( 1 == $cptchpr_options[$diff[0]] ) echo "checked=\"checked\""; ?> /> <?php echo __( $diff[1], 'captcha_pro' ); ?></label>
 </div> <div class="cptchpr_help_box"> <div class="cptchpr_hidden_help_text" style="display: none;width: auto;"><?php cptchpr_display_example( $diff[0] ); ?></div>
 </div> <br /> <?php } ?> </td> </tr> </table> <input type="hidden" name="cptchpr_form_submit" value="submit" />
 <p class="submit"> <input type="submit" class="button-primary" value="<?php _e( 'Save Changes' ) ?>" />
 </p> <?php wp_nonce_field( plugin_basename(__FILE__), 'cptchpr_nonce_name' ); ?> </form> <form method="post" action="admin.php?page=captcha_pro.php">
 <p><?php echo _e( 'If needed you can check if the license key is correct or reenter it in the field below. You can find your license key on your personal page - Client area - on our website', 'captcha_pro' ) . ' <a href="http://bestwebsoft.com/wp-login.php">http://bestwebsoft.com/wp-login.php</a>' . __( '(your username is the email you specify when purchasing the product). If necessary, please submit "Lost your password?" request.', 'captcha_pro' ); ?></p>
 <p> <input type="text" name="cptchpr_license_key" value="<?php echo $license_key; ?>" /> <input type="hidden" name="cptchpr_license_submit" value="submit" />
 <input type="submit" class="button-primary" value="<?php _e( 'Check license key', 'captcha_pro' ) ?>" />
 <?php wp_nonce_field( plugin_basename(__FILE__), 'cptchpr_license_nonce_name' ); ?> </p> </form>
 <div class="bws-plugin-reviews"> <div class="bws-plugin-reviews-rate"> <?php _e( 'If you enjoy our plugin, please give it 5 stars on WordPress', 'captcha_pro' ); ?>: 
 <a href="http://wordpress.org/support/view/plugin-reviews/captcha" target="_blank" title="Captcha reviews"><?php _e( 'Rate the plugin', 'captcha_pro' ); ?></a><br/>
 </div> <div class="bws-plugin-reviews-support"> <?php _e( 'If there is something wrong about it, please contact us', 'captcha_pro' ); ?>: 
 <a href="http://support.bestwebsoft.com">http://support.bestwebsoft.com</a> </div> </div> </div>
 <?php } } if ( ! function_exists( 'cptchpr_login_form' ) ) { function cptchpr_login_form() { if ( session_id() == "" )
 @session_start(); global $cptchpr_options; echo '<p class="cptchpr_block">'; if ( "" != $cptchpr_options['cptchpr_label_form'] ) 
 echo '<label>'. stripslashes( $cptchpr_options['cptchpr_label_form'] ) .'</label><br />'; echo '<br />';
cptchpr_display_captcha(); echo '</p> <br />'; return true; } } if ( ! function_exists( 'cptchpr_login_check' ) ) {
 function cptchpr_login_check( $user ) { global $cptchpr_options; if ( ! isset( $cptchpr_options['cptchpr_str_key'] ) )
 $cptchpr_options = get_option( 'cptchpr_options' ); $str_key = $cptchpr_options['cptchpr_str_key']['key'];
 if ( ( !isset( $_REQUEST['cptchpr_number'] ) || "" == $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['loggedout'] ) ) {
 $error = new WP_Error(); $error->add( 'cptchpr_error', __( '<strong>ERROR</strong>: Please fill the form.', 'captcha_pro' ) );
return $error; } if ( isset( $_REQUEST['cptchpr_result'] ) && isset( $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['cptchpr_time'] ) ) {
 if ( 0 == strcasecmp( trim( decode( $_REQUEST['cptchpr_result'], $str_key, $_REQUEST['cptchpr_time'] ) ), $_REQUEST['cptchpr_number'] ) ) { 
 return $user; } else { $error = new WP_Error(); $error->add( 'cptchpr_error', __( '<strong>ERROR</strong>: Please enter a valid CAPTCHA value.', 'captcha_pro' ) );
return $error; } } else { return $user; } } } if ( ! function_exists ( 'cptchpr_comment_form' ) ) {
 function cptchpr_comment_form() { global $cptchpr_options; if ( is_user_logged_in() && 1 == $cptchpr_options['cptchpr_hide_register'] ) {
 return true; } echo '<p class="cptchpr_block">'; if ( "" != $cptchpr_options['cptchpr_label_form'] ) 
 echo '<label>'. stripslashes( $cptchpr_options['cptchpr_label_form'] ) .'<span class="required"> ' . $cptchpr_options['cptchpr_required_symbol'] . '</span></label>';
echo '<br />'; cptchpr_display_captcha(); echo '</p>'; return true; } } if ( ! function_exists ( 'cptchpr_comment_form_default_wp3' ) ) {
 function cptchpr_comment_form_default_wp3( $args ){ global $cptchpr_options; if ( is_user_logged_in() && 1 == $cptchpr_options['cptchpr_hide_register'] ) {
 return $args; } $args['comment_notes_after'] .= cptchpr_custom_form( "" ); remove_action( 'comment_form', 'cptchpr_comment_form' );
return $args; } } if ( ! function_exists ( 'cptchpr_comment_form_wp3' ) ) { function cptchpr_comment_form_wp3() {
 global $cptchpr_options; if ( is_user_logged_in() && 1 == $cptchpr_options['cptchpr_hide_register'] ) {
 return true; } echo '<p class="cptchpr_block">'; if ( "" != $cptchpr_options['cptchpr_label_form'] ) 
 echo '<label>'. stripslashes( $cptchpr_options['cptchpr_label_form'] ) .'<span class="required"> ' . $cptchpr_options['cptchpr_required_symbol'] . '</span></label>';
echo '<br />'; cptchpr_display_captcha(); echo '</p>'; remove_action( 'comment_form', 'cptchpr_comment_form' );
return true; } } if ( ! function_exists ( 'cptchpr_comment_post' ) ) { function cptchpr_comment_post( $comment ) { 
 global $cptchpr_options; if ( is_user_logged_in() && 1 == $cptchpr_options['cptchpr_hide_register'] ) {
 return $comment; } $str_key = $cptchpr_options['cptchpr_str_key']['key']; if ( function_exists( 'WPWall_Widget' ) && isset( $_REQUEST['wpwall_comment'] ) ) { 
 return $comment; } if ( isset( $_REQUEST['action'] ) && $_REQUEST['action'] == 'replyto-comment' &&
 ( check_ajax_referer( 'replyto-comment', '_ajax_nonce', false ) || check_ajax_referer( 'replyto-comment', '_ajax_nonce-replyto-comment', false ) ) ) { 
 return $comment; } if ( $comment['comment_type'] != '' && $comment['comment_type'] != 'comment' ) { 
 return $comment; } if ( isset( $_REQUEST['cptchpr_number'] ) && "" == $_REQUEST['cptchpr_number'] )
 wp_die( __('Please fill the form.', 'captcha_pro' ) ); if ( isset( $_REQUEST['cptchpr_result'] ) && isset( $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['cptchpr_time'] )
 && 0 == strcasecmp( trim( decode( $_REQUEST['cptchpr_result'], $str_key, $_REQUEST['cptchpr_time'] ) ), $_REQUEST['cptchpr_number'] ) ) { 
 return( $comment ); } else { wp_die( __('Error: You have entered an incorrect CAPTCHA value. Click the BACK button on your browser, and try again.', 'captcha_pro'));
} } } if ( ! function_exists ( 'cptchpr_register_form' ) ) { function cptchpr_register_form() { global $cptchpr_options; 
 echo '<p class="cptchpr_block" style="text-align:left;">'; if ( "" != $cptchpr_options['cptchpr_label_form'] ) 
 echo '<label>'. stripslashes( $cptchpr_options['cptchpr_label_form'] ) .'</label><br />'; echo '<br />';
cptchpr_display_captcha(); echo '</p> <br />'; return true; } } if ( ! function_exists ( 'cptchpr_register_post' ) ) {
 function cptchpr_register_post( $login, $email, $errors ) { global $cptchpr_options; $str_key = $cptchpr_options['cptchpr_str_key']['key']; 
 if ( isset( $_REQUEST['cptchpr_number'] ) && "" == $_REQUEST['cptchpr_number'] ) { $errors->add('captcha_blank', '<strong>'.__('ERROR', 'captcha_pro').'</strong>: '.__('Please fill the form.', 'captcha_pro'));
return $errors; } if ( isset( $_REQUEST['cptchpr_result'] ) && isset( $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['cptchpr_time'] ) 
 && 0 == strcasecmp( trim( decode( $_REQUEST['cptchpr_result'], $str_key, $_REQUEST['cptchpr_time'] ) ), $_REQUEST['cptchpr_number'] ) ) { 
 } else { $errors->add( 'captcha_wrong', '<strong>'.__( 'ERROR', 'captcha_pro' ).'</strong>: '.__( 'Please enter a valid CAPTCHA value.', 'captcha_pro' ) );
} return( $errors ); } } if ( ! function_exists ( 'cptchpr_register_validate' ) ) { function cptchpr_register_validate( $results ) {
 global $cptchpr_options; $str_key = $cptchpr_options['cptchpr_str_key']['key']; if ( isset( $_REQUEST['cptchpr_number'] ) && "" == $_REQUEST['cptchpr_number'] ) {
 $results['errors']->add( 'captcha_blank', '<strong>' . __( 'ERROR', 'captcha_pro' ) . '</strong>: ' . __( 'Please fill the form.', 'captcha_pro' ) );
return $results; } if ( isset( $_REQUEST['cptchpr_result'] ) && isset( $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['cptchpr_time'] ) 
 && 0 == strcasecmp( trim( decode( $_REQUEST['cptchpr_result'], $str_key, $_REQUEST['cptchpr_time'] ) ), $_REQUEST['cptchpr_number'] ) ) { 
 } else { $results['errors']->add( 'captcha_wrong', '<strong>' . __( 'ERROR', 'captcha_pro' ) . '</strong>: ' . __( 'Please enter a valid CAPTCHA value.', 'captcha_pro' ) );
} return( $results ); } } if ( ! function_exists ( 'cptchpr_lostpassword_post' ) ) { function cptchpr_lostpassword_post() {
 global $cptchpr_options; $str_key = $cptchpr_options['cptchpr_str_key']['key']; if( isset( $_REQUEST['user_login'] ) && "" == $_REQUEST['user_login'] )
 return; if ( isset( $_REQUEST['cptchpr_number'] ) && "" == $_REQUEST['cptchpr_number'] ) { wp_die( __( 'Please fill the form.', 'captcha_pro' ) );
} if ( isset( $_REQUEST['cptchpr_result'] ) && isset( $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['cptchpr_time'] ) 
 && 0 == strcasecmp( trim( decode( $_REQUEST['cptchpr_result'], $str_key, $_REQUEST['cptchpr_time'] ) ), $_REQUEST['cptchpr_number'] ) ) {
 return; } else { wp_die( __( 'Error: You have entered an incorrect CAPTCHA value. Click the BACK button on your browser, and try again.', 'captcha_pro' ) );
} } } if ( ! function_exists ( 'cptchpr_display_captcha' ) ) { function cptchpr_display_captcha() {
 global $cptchpr_options, $cptchpr_time; if ( ! isset( $cptchpr_options['cptchpr_str_key'] ) ) $cptchpr_options = get_option( 'cptchpr_options' );
if ( $cptchpr_options['cptchpr_str_key']['key'] == '' || $cptchpr_options['cptchpr_str_key']['time'] < time() - ( 24 * 60 * 60 ) )
 cptchpr_generate_key(); $str_key = $cptchpr_options['cptchpr_str_key']['key']; $number_string = array(); 
 $number_string[0] = __( 'zero', 'captcha_pro' ); $number_string[1] = __( 'one', 'captcha_pro' ); $number_string[2] = __( 'two', 'captcha_pro' );
$number_string[3] = __( 'three', 'captcha_pro' ); $number_string[4] = __( 'four', 'captcha_pro' ); $number_string[5] = __( 'five', 'captcha_pro' );
$number_string[6] = __( 'six', 'captcha_pro' ); $number_string[7] = __( 'seven', 'captcha_pro' ); $number_string[8] = __( 'eight', 'captcha_pro' );
$number_string[9] = __( 'nine', 'captcha_pro' ); $number_two_string = array(); $number_two_string[1] = __( 'eleven', 'captcha_pro' );
$number_two_string[2] = __( 'twelve', 'captcha_pro' ); $number_two_string[3] = __( 'thirteen', 'captcha_pro' );
$number_two_string[4] = __( 'fourteen', 'captcha_pro' ); $number_two_string[5] = __( 'fifteen', 'captcha_pro' );
$number_two_string[6] = __( 'sixteen', 'captcha_pro' ); $number_two_string[7] = __( 'seventeen', 'captcha_pro' );
$number_two_string[8] = __( 'eighteen', 'captcha_pro' ); $number_two_string[9] = __( 'nineteen', 'captcha_pro' ); 
 $number_three_string = array(); $number_three_string[1] = __( 'ten', 'captcha_pro' ); $number_three_string[2] = __( 'twenty', 'captcha_pro' );
$number_three_string[3] = __( 'thirty', 'captcha_pro' ); $number_three_string[4] = __( 'forty', 'captcha_pro' );
$number_three_string[5] = __( 'fifty', 'captcha_pro' ); $number_three_string[6] = __( 'sixty', 'captcha_pro' );
$number_three_string[7] = __( 'seventy', 'captcha_pro' ); $number_three_string[8] = __( 'eighty', 'captcha_pro' );
$number_three_string[9] = __( 'ninety', 'captcha_pro' ); $math_actions = array(); if ( 1 == $cptchpr_options['cptchpr_math_action_plus'] )
 $math_actions[] = '&#43;'; if ( 1 == $cptchpr_options['cptchpr_math_action_minus'] ) $math_actions[] = '&minus;'; 
 if ( 1 == $cptchpr_options['cptchpr_math_action_increase'] ) $math_actions[] = '&times;'; $rand_input = rand( 0, 2 ); 
 $rand_number_string = rand( 0, 2 ); if ( 0 == $cptchpr_options["cptchpr_difficulty_word"] ) $rand_number_string = -1; 
 while ( $rand_input == $rand_number_string ) { $rand_number_string = rand( 0, 2 ); } $rand_math_action = rand( 0, count( $math_actions) - 1 );
$array_math_expretion = array(); $array_math_expretion[0] = rand( 1, 9 ); $array_math_expretion[1] = rand( 1, 9 ); 
 switch( $math_actions[ $rand_math_action ] ) { case "&#43;": $array_math_expretion[2] = $array_math_expretion[0] + $array_math_expretion[1];
break; case "&minus;": if ( $array_math_expretion[0] < $array_math_expretion[1] ) { $number = $array_math_expretion[0];
$array_math_expretion[0] = $array_math_expretion[1]; $array_math_expretion[1] = $number; } $array_math_expretion[2] = $array_math_expretion[0] - $array_math_expretion[1];
break; case "&times;": $array_math_expretion[2] = $array_math_expretion[0] * $array_math_expretion[1];
break; } $str_math_expretion = ""; if ( 0 == $rand_input ) $str_math_expretion .= "<input id=\"cptchpr_input\" type=\"text\" autocomplete=\"off\" name=\"cptchpr_number\" value=\"\" maxlength=\"2\" size=\"2\" aria-required=\"true\" required=\"required\" style=\"margin-bottom:0;display:inline;font-size: 12px;width: 30px;\" />";
else if ( 0 == $rand_number_string || 0 == $cptchpr_options["cptchpr_difficulty_number"] ) $str_math_expretion .= cptchpr_converting( $number_string[ $array_math_expretion[0] ] );
else $str_math_expretion .= $array_math_expretion[0]; $str_math_expretion .= " " . $math_actions[ $rand_math_action ]; 
 if ( 1 == $rand_input ) $str_math_expretion .= " <input id=\"cptchpr_input\" type=\"text\" autocomplete=\"off\" name=\"cptchpr_number\" value=\"\" maxlength=\"2\" size=\"2\" aria-required=\"true\" required=\"required\" style=\"margin-bottom:0;display:inline;font-size: 12px;width: 30px;\" />";
else if ( 1 == $rand_number_string || 0 == $cptchpr_options["cptchpr_difficulty_number"] ) $str_math_expretion .= " " . cptchpr_converting( $number_string[ $array_math_expretion[1] ] );
else $str_math_expretion .= " " . $array_math_expretion[1]; $str_math_expretion .= " = "; if ( 2 == $rand_input ) {
 $str_math_expretion .= " <input id=\"cptchpr_input\" type=\"text\" autocomplete=\"off\" name=\"cptchpr_number\" value=\"\" maxlength=\"2\" size=\"2\" aria-required=\"true\" required=\"required\" style=\"margin-bottom:0;display:inline;font-size: 12px;width: 30px;\" />";
} else if ( 2 == $rand_number_string || 0 == $cptchpr_options["cptchpr_difficulty_number"] ) { if ( $array_math_expretion[2] < 10 )
 $str_math_expretion .= " " . cptchpr_converting( $number_string[ $array_math_expretion[2] ] ); else if( $array_math_expretion[2] < 20 && $array_math_expretion[2] > 10 )
 $str_math_expretion .= " " . cptchpr_converting( $number_two_string[ $array_math_expretion[2] % 10 ] );
else { if ( get_bloginfo( 'language', 'Display' ) == "nl-NL" ) { $str_math_expretion .= " " . ( 0 != $array_math_expretion[2] % 10 ? $number_string[ $array_math_expretion[2] % 10 ] . __( "and", 'captcha_pro' ) : '' ) . $number_three_string[ $array_math_expretion[2] / 10 ];
} else { $str_math_expretion .= " " . cptchpr_converting( $number_three_string[ $array_math_expretion[2] / 10 ] ) . " " . ( 0 != $array_math_expretion[2] % 10 ? cptchpr_converting( $number_string[ $array_math_expretion[2] % 10 ] ) : '' );
} } } else { $str_math_expretion .= $array_math_expretion[2]; } ?> <input type="hidden" name="cptchpr_result" value="<?php echo $str = encode( $array_math_expretion[ $rand_input ], $str_key, $cptchpr_time ); ?>" />
 <input type="hidden" name="cptchpr_time" value="<?php echo $cptchpr_time; ?>" /> <input type="hidden" value="Version: 2.4" />
 <?php echo $str_math_expretion; ?> <?php } } if ( ! function_exists ( 'cptchpr_converting' ) ) { function cptchpr_converting( $number_string ) {
 global $cptchpr_options; if ( 1 == $cptchpr_options["cptchpr_difficulty_word"] && get_bloginfo( 'language' ) == 'en-US' ) { 
 $htmlspecialchars_array = array(); $htmlspecialchars_array['a'] = '&#97;'; $htmlspecialchars_array['b'] = '&#98;';
$htmlspecialchars_array['c'] = '&#99;'; $htmlspecialchars_array['d'] = '&#100;'; $htmlspecialchars_array['e'] = '&#101;';
$htmlspecialchars_array['f'] = '&#102;'; $htmlspecialchars_array['g'] = '&#103;'; $htmlspecialchars_array['h'] = '&#104;';
$htmlspecialchars_array['i'] = '&#105;'; $htmlspecialchars_array['j'] = '&#106;'; $htmlspecialchars_array['k'] = '&#107;';
$htmlspecialchars_array['l'] = '&#108;'; $htmlspecialchars_array['m'] = '&#109;'; $htmlspecialchars_array['n'] = '&#110;';
$htmlspecialchars_array['o'] = '&#111;'; $htmlspecialchars_array['p'] = '&#112;'; $htmlspecialchars_array['q'] = '&#113;';
$htmlspecialchars_array['r'] = '&#114;'; $htmlspecialchars_array['s'] = '&#115;'; $htmlspecialchars_array['t'] = '&#116;';
$htmlspecialchars_array['u'] = '&#117;'; $htmlspecialchars_array['v'] = '&#118;'; $htmlspecialchars_array['w'] = '&#119;';
$htmlspecialchars_array['x'] = '&#120;'; $htmlspecialchars_array['y'] = '&#121;'; $htmlspecialchars_array['z'] = '&#122;';
$simbols_lenght = strlen( $number_string ); $simbols_lenght--; $number_string_new = str_split( $number_string );
$converting_letters = rand( 1, $simbols_lenght ); while ( $converting_letters != 0 ) { $position = rand( 0, $simbols_lenght );
$number_string_new[ $position ] = isset( $htmlspecialchars_array[ $number_string_new[ $position ] ] ) ? $htmlspecialchars_array[ $number_string_new[ $position ] ] : $number_string_new[ $position ];
$converting_letters--; } $number_string = ''; foreach ( $number_string_new as $key => $value ) { $number_string .= $value;
} return $number_string; } else return $number_string; } } if ( ! function_exists ( 'encode' ) ) {
 function encode( $String, $Password, $cptchpr_time ) { if ( ! $Password ) die ( __( "Encryption password is not set", 'captcha_pro' ) );
$Salt = md5( $cptchpr_time, true ); $String = substr( pack( "H*", sha1( $String ) ), 0, 1 ).$String;
$StrLen = strlen( $String ); $Seq = $Password; $Gamma = ''; while ( strlen( $Gamma ) < $StrLen ) { $Seq = pack( "H*", sha1( $Seq . $Gamma . $Salt ) );
$Gamma.=substr( $Seq, 0, 8 ); } return base64_encode( $String ^ $Gamma ); } } if ( ! function_exists ( 'decode' ) ) {
 function decode( $String, $Key, $cptchpr_time ) { if ( ! $Key ) die ( __( "Decryption password is not set", 'captcha_pro' ) );
$Salt = md5( $cptchpr_time, true ); $StrLen = strlen( $String ); $Seq = $Key; $Gamma = ''; while ( strlen( $Gamma ) < $StrLen ) {
 $Seq = pack( "H*", sha1( $Seq . $Gamma . $Salt ) ); $Gamma.= substr( $Seq, 0, 8 ); } $String = base64_decode( $String );
$String = $String^$Gamma; $DecodedString = substr( $String, 1 ); $Error = ord( substr( $String, 0, 1 ) ^ substr( pack( "H*", sha1( $DecodedString ) ), 0, 1 )); 
 if ( $Error ) return false; else return $DecodedString; } } if ( ! function_exists ( 'cptchpr_custom_form' ) ) {
 function cptchpr_custom_form( $error_message ) { $cptchpr_options = get_option( 'cptchpr_options' );
$content = ""; $content .= '<p class="cptchpr_block" style="text-align:left;">'; if( "" != $cptchpr_options['cptchpr_label_form'] ) 
 $content .= '<label>'. stripslashes( $cptchpr_options['cptchpr_label_form'] ) .'<span class="required"> ' . $cptchpr_options['cptchpr_required_symbol'] . '</span></label><br />';
else $content .= '<br />'; if( isset( $error_message['error_captcha'] ) ) { $content .= "<span class='cptchpr_error' style='color:red'>". $error_message['error_captcha'] ."</span><br />";
} $content .= cptchpr_display_captcha_custom(); $content .= '</p>'; return $content ; } } if ( ! function_exists ( 'cptchpr_check_custom_form' ) ) {
 function cptchpr_check_custom_form() { global $cptchpr_options; $str_key = $cptchpr_options['cptchpr_str_key']['key'];
if ( isset( $_REQUEST['cntctfrm_contact_action'] ) || isset( $_REQUEST['cntctfrmpr_contact_action'] ) ) { 
 if ( isset( $_REQUEST['cptchpr_number'] ) && "" == $_REQUEST['cptchpr_number'] ) { return false; } 
 if ( isset( $_REQUEST['cptchpr_result'] ) && isset( $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['cptchpr_time'] )
 && 0 == strcasecmp( trim( decode( $_REQUEST['cptchpr_result'], $str_key, $_REQUEST['cptchpr_time'] ) ), $_REQUEST['cptchpr_number'] ) ) {
 return true; } else { return false; } } else return false; } } if ( ! function_exists ( 'cptchpr_display_captcha_custom' ) ) {
 function cptchpr_display_captcha_custom( $class_name = "", $cptchpr_input_name = 'cptchpr_number' ) {
 global $cptchpr_options, $cptchpr_time; $content = ""; if ( ! isset( $cptchpr_options['cptchpr_str_key'] ) )
 $cptchpr_options = get_option( 'cptchpr_options' ); if ( $cptchpr_options['cptchpr_str_key']['key'] == '' || $cptchpr_options['cptchpr_str_key']['time'] < time() - ( 24 * 60 * 60 ) )
 cptchpr_generate_key(); $str_key = $cptchpr_options['cptchpr_str_key']['key']; $number_string = array(); 
 $number_string[0] = __( 'zero', 'captcha_pro' ); $number_string[1] = __( 'one', 'captcha_pro' ); $number_string[2] = __( 'two', 'captcha_pro' );
$number_string[3] = __( 'three', 'captcha_pro' ); $number_string[4] = __( 'four', 'captcha_pro' ); $number_string[5] = __( 'five', 'captcha_pro' );
$number_string[6] = __( 'six', 'captcha_pro' ); $number_string[7] = __( 'seven', 'captcha_pro' ); $number_string[8] = __( 'eight', 'captcha_pro' );
$number_string[9] = __( 'nine', 'captcha_pro' ); $number_two_string = array(); $number_two_string[1] = __( 'eleven', 'captcha_pro' );
$number_two_string[2] = __( 'twelve', 'captcha_pro' ); $number_two_string[3] = __( 'thirteen', 'captcha_pro' );
$number_two_string[4] = __( 'fourteen', 'captcha_pro' ); $number_two_string[5] = __( 'fifteen', 'captcha_pro' );
$number_two_string[6] = __( 'sixteen', 'captcha_pro' ); $number_two_string[7] = __( 'seventeen', 'captcha_pro' );
$number_two_string[8] = __( 'eighteen', 'captcha_pro' ); $number_two_string[9] = __( 'nineteen', 'captcha_pro' ); 
 $number_three_string = array(); $number_three_string[1] = __( 'ten', 'captcha_pro' ); $number_three_string[2] = __( 'twenty', 'captcha_pro' );
$number_three_string[3] = __( 'thirty', 'captcha_pro' ); $number_three_string[4] = __( 'forty', 'captcha_pro' );
$number_three_string[5] = __( 'fifty', 'captcha_pro' ); $number_three_string[6] = __( 'sixty', 'captcha_pro' );
$number_three_string[7] = __( 'seventy', 'captcha_pro' ); $number_three_string[8] = __( 'eighty', 'captcha_pro' );
$number_three_string[9] = __( 'ninety', 'captcha_pro' ); $math_actions = array(); if( 1 == $cptchpr_options['cptchpr_math_action_plus'] )
 $math_actions[] = '&#43;'; if( 1 == $cptchpr_options['cptchpr_math_action_minus'] ) $math_actions[] = '&minus;'; 
 if( 1 == $cptchpr_options['cptchpr_math_action_increase'] ) $math_actions[] = '&times;'; $rand_input = rand( 0, 2 ); 
 $rand_number_string = rand( 0, 2 ); if( 0 == $cptchpr_options["cptchpr_difficulty_word"]) $rand_number_string = -1; 
 while($rand_input == $rand_number_string) { $rand_number_string = rand( 0, 2 ); } $rand_math_action = rand( 0, count($math_actions) - 1 );
$array_math_expretion = array(); $array_math_expretion[0] = rand( 1, 9 ); $array_math_expretion[1] = rand( 1, 9 ); 
 switch( $math_actions[$rand_math_action] ) { case "&#43;": $array_math_expretion[2] = $array_math_expretion[0] + $array_math_expretion[1];
break; case "&minus;": if ( $array_math_expretion[0] < $array_math_expretion[1] ) { $number = $array_math_expretion[0];
$array_math_expretion[0] = $array_math_expretion[1]; $array_math_expretion[1] = $number; } $array_math_expretion[2] = $array_math_expretion[0] - $array_math_expretion[1];
break; case "&times;": $array_math_expretion[2] = $array_math_expretion[0] * $array_math_expretion[1];
break; } $str_math_expretion = ""; if( 0 == $rand_input ) { if ( $class_name != '' ) $str_math_expretion .= "<input class=\"" . $class_name . "\" type=\"text\" autocomplete=\"off\" name=\"" . $cptchpr_input_name . "\" value=\"\" maxlength=\"1\" size=\"1\" aria-required=\"true\" required=\"required\" style=\"margin-bottom:0;display:inline;font-size: 12px;width: 30px;\" />";
else $str_math_expretion .= "<input type=\"text\" autocomplete=\"off\" name=\"" . $cptchpr_input_name . "\" value=\"\" maxlength=\"1\" size=\"1\" aria-required=\"true\" required=\"required\" style=\"margin-bottom:0;display:inline;font-size: 12px;width: 30px;\" />";
} else if ( 0 == $rand_number_string || 0 == $cptchpr_options["cptchpr_difficulty_number"] ) { $str_math_expretion .= cptchpr_converting( $number_string[ $array_math_expretion[0] ] );
} else { $str_math_expretion .= $array_math_expretion[0]; } $str_math_expretion .= " " . $math_actions[ $rand_math_action ]; 
 if ( 1 == $rand_input ) { if ( $class_name != '' ) $str_math_expretion .= " <input class=\"" . $class_name . "\" type=\"text\" autocomplete=\"off\" name=\"" . $cptchpr_input_name . "\" value=\"\" maxlength=\"1\" size=\"1\" aria-required=\"true\" required=\"required\" style=\"margin-bottom:0;display:inline;font-size: 12px;width: 30px;\" />";
else $str_math_expretion .= " <input type=\"text\" autocomplete=\"off\" name=\"" . $cptchpr_input_name . "\" value=\"\" maxlength=\"1\" size=\"1\" aria-required=\"true\" required=\"required\" style=\"margin-bottom:0;display:inline;font-size: 12px;width: 30px;\" />";
} else if ( 1 == $rand_number_string || 0 == $cptchpr_options["cptchpr_difficulty_number"] ) $str_math_expretion .= " " . cptchpr_converting( $number_string[ $array_math_expretion[1] ] );
else $str_math_expretion .= " " . $array_math_expretion[1]; $str_math_expretion .= " = "; if ( 2 == $rand_input ) {
 if ( $class_name != '' ) $str_math_expretion .= " <input class=\"" . $class_name . "\" type=\"text\" autocomplete=\"off\" name=\"" . $cptchpr_input_name . "\" value=\"\" maxlength=\"2\" size=\"1\" aria-required=\"true\" required=\"required\" style=\"margin-bottom:0;display:inline;font-size: 12px;width: 30px;\" />";
else $str_math_expretion .= " <input type=\"text\" autocomplete=\"off\" name=\"" . $cptchpr_input_name . "\" value=\"\" maxlength=\"2\" size=\"1\" aria-required=\"true\" required=\"required\" style=\"margin-bottom:0;display:inline;font-size: 12px;width: 30px;\" />";
} else if ( 2 == $rand_number_string || 0 == $cptchpr_options["cptchpr_difficulty_number"] ) { if ( $array_math_expretion[2] < 10 )
 $str_math_expretion .= " " . cptchpr_converting( $number_string[ $array_math_expretion[2] ] ); else if ( $array_math_expretion[2] < 20 && $array_math_expretion[2] > 10 )
 $str_math_expretion .= " ". cptchpr_converting( $number_two_string[ $array_math_expretion[2] % 10 ] );
else { if ( get_bloginfo( 'language','Display' ) == "nl-NL" ) { $str_math_expretion .= " " . ( 0 != $array_math_expretion[2] % 10 ? $number_string[ $array_math_expretion[2] % 10 ] . __( "and", 'captcha_pro' ) : '' ) . $number_three_string[ $array_math_expretion[2] / 10 ];
} else { $str_math_expretion .= " " . cptchpr_converting( $number_three_string[ $array_math_expretion[2] / 10 ] ) . " " . ( 0 != $array_math_expretion[2] % 10 ? cptchpr_converting( $number_string[ $array_math_expretion[2] % 10 ] ) : '' );
} } } else { $str_math_expretion .= $array_math_expretion[2]; } if ( $cptchpr_input_name == 'cptchpr_number' ) {
 $content .= '<input type="hidden" name="cptchpr_result" value="'.$str = encode( $array_math_expretion[ $rand_input ], $str_key, $cptchpr_time ).'" />
 <input type="hidden" name="cptchpr_time" value="'.$cptchpr_time.'" /> <input type="hidden" value="Version: 2.4" />';
} else { $content .= '<input type="hidden" name="' . $cptchpr_input_name . '-cptchpr_result" value="' . $str = encode( $array_math_expretion[ $rand_input ], $str_key, $cptchpr_time ) . '" />
 <input type="hidden" name="' . $cptchpr_input_name . '-cptchpr_time" value="' . $cptchpr_time . '" />
 <input type="hidden" value="Version: 2.4" />'; } $content .= $str_math_expretion; return $content;
} } if ( ! function_exists ( 'cptchpr_contact_form_options' ) ) { function cptchpr_contact_form_options() {
 if ( function_exists( 'get_plugins' ) ) { $all_plugins = get_plugins(); if ( array_key_exists( 'contact-form-plugin/contact_form.php', $all_plugins ) ) {
 $cptchpr_options = get_option( 'cptchpr_options' ); if ( $cptchpr_options['cptchpr_contact_form'] == 1) {
 add_filter('cntctfrm_display_captcha', 'cptchpr_custom_form'); add_filter('cntctfrm_check_form', 'cptchpr_check_custom_form');
} elseif ( $cptchpr_options['cptchpr_contact_form'] == 0 ) { remove_filter('cntctfrm_display_captcha', 'cptchpr_custom_form');
remove_filter('cntctfrm_check_form', 'cptchpr_check_custom_form'); } } elseif ( array_key_exists( 'contact-form-pro/contact_form_pro.php', $all_plugins ) ) {
 $cptchpr_options = get_option( 'cptchpr_options' ); if ( $cptchpr_options['cptchpr_contact_form'] == 1) {
 add_filter('cntctfrmpr_display_captcha', 'cptchpr_custom_form'); add_filter('cntctfrmpr_check_form', 'cptchpr_check_custom_form');
} elseif ( $cptchpr_options['cptchpr_contact_form'] == 0 ) { remove_filter('cntctfrmpr_display_captcha', 'cptchpr_custom_form');
remove_filter('cntctfrmpr_check_form', 'cptchpr_check_custom_form'); } } } else { if ( ! function_exists( 'is_plugin_active_for_network' ) )
 require_once( ABSPATH . '/wp-admin/includes/plugin.php' ); $active_plugins = get_option( 'active_plugins' );
if ( 0 < count( preg_grep( '/contact-form-plugin\/contact_form.php/', $active_plugins ) ) || is_plugin_active_for_network( 'contact-form-plugin/contact_form.php' ) ) { 
 $cptchpr_options = get_option( 'cptchpr_options' ); if( $cptchpr_options['cptchpr_contact_form'] == 1) {
 add_filter('cntctfrm_display_captcha', 'cptchpr_custom_form'); add_filter('cntctfrm_check_form', 'cptchpr_check_custom_form');
} else if( $cptchpr_options['cptchpr_contact_form'] == 0 ) { remove_filter('cntctfrm_display_captcha', 'cptchpr_custom_form');
remove_filter('cntctfrm_check_form', 'cptchpr_check_custom_form'); } } elseif ( 0 < count( preg_grep( '/contact-form-pro\/contact_form_pro.php/', $active_plugins ) ) || is_plugin_active_for_network( 'contact-form-pro/contact_form_pro.php' ) ) { 
 $cptchpr_options = get_option( 'cptchpr_options' ); if( $cptchpr_options['cptchpr_contact_form'] == 1) {
 add_filter('cntctfrmpr_display_captcha', 'cptchpr_custom_form'); add_filter('cntctfrmpr_check_form', 'cptchpr_check_custom_form');
} else if( $cptchpr_options['cptchpr_contact_form'] == 0 ) { remove_filter('cntctfrmpr_display_captcha', 'cptchpr_custom_form');
remove_filter('cntctfrmpr_check_form', 'cptchpr_check_custom_form'); } } } } } if ( ! function_exists ( 'cptchpr_buddypress_registration' ) ) {
 function cptchpr_buddypress_registration() { global $bp, $cptchpr_options; echo '<div id="profile-details-section" class="register-section cptchpr-section">
 <div class="editfield">'; if ( "" != $cptchpr_options['cptchpr_label_form'] ) echo '<label>'. stripslashes( $cptchpr_options['cptchpr_label_form'] ) .'<span class="required"> ' . $cptchpr_options['cptchpr_required_symbol'] . '</span></label>';
else echo '<br />'; if ( !empty( $bp->signup->errors['cptchpr_buddypress_registration'] ) ) { echo '<div class="error">' . $bp->signup->errors['cptchpr_buddypress_registration'] . '</div>';
} echo cptchpr_display_captcha_custom(); echo '</div> </div>'; } } if ( ! function_exists ( 'cptchpr_buddypress_registration_validate' ) ) {
 function cptchpr_buddypress_registration_validate( $errors ) { global $bp, $cptchpr_options; $str_key = $cptchpr_options['cptchpr_str_key']['key']; 
 if ( isset( $_REQUEST['cptchpr_number'] ) && "" == $_REQUEST['cptchpr_number'] ) { $bp->signup->errors['cptchpr_buddypress_registration'] = __( 'Please fill the form', 'captcha_pro' );
return false; } if ( isset( $_REQUEST['cptchpr_result'] ) && isset( $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['cptchpr_time'] )
 && 0 == strcasecmp( trim( decode( $_REQUEST['cptchpr_result'], $str_key, $_REQUEST['cptchpr_time'] ) ), $_REQUEST['cptchpr_number'] ) ) {
 return true; } else { $bp->signup->errors['cptchpr_buddypress_registration'] = __( 'Please enter a valid CAPTCHA value', 'captcha_pro' );
return false; } return; } } if ( ! function_exists ( 'cptchpr_buddypress_comment_form' ) ) { function cptchpr_buddypress_comment_form() {
 global $bp, $cptchpr_options; echo '<div class="ac-reply-content ac-reply-content-captcha">'; if ( "" != $cptchpr_options['cptchpr_label_form'] ) 
 echo '<br /><label>' . stripslashes( $cptchpr_options['cptchpr_label_form'] ) .'<span class="required"> ' . $cptchpr_options['cptchpr_required_symbol'] . '</span></label><br />';
else echo '<br />'; echo cptchpr_display_captcha_custom(); echo '</div>'; } } if ( ! function_exists ( 'cptchpr_buddypress_comment_form_validate' ) ) {
 function cptchpr_buddypress_comment_form_validate() { global $bp, $activity_id, $cptchpr_options;
$str_key = $cptchpr_options['cptchpr_str_key']['key']; if ( !is_user_logged_in() || !bp_is_activity_component() || !bp_is_current_action( 'reply' ) )
 return false; $activity_id = apply_filters( 'bp_activity_post_comment_activity_id', $_POST['comment_form_id'] );
$content = apply_filters( 'bp_activity_post_comment_content', $_POST['ac_input_' . $activity_id] );
if ( isset( $_REQUEST['cptchpr_number'] ) && "" == $_REQUEST['cptchpr_number'] ) { bp_core_add_message( __( 'Please fill the form.', 'captcha_pro' ) , 'error' );
bp_core_redirect( wp_get_referer() . '#ac-form-' . $activity_id ); } if ( isset( $_REQUEST['cptchpr_result'] ) && isset( $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['cptchpr_time'] ) 
 && 0 != strcasecmp( trim( decode( $_REQUEST['cptchpr_result'], $str_key, $_REQUEST['cptchpr_time'] ) ), $_REQUEST['cptchpr_number'] ) ) {
 bp_core_add_message( __( 'Please enter a valid CAPTCHA value', 'captcha_pro' ) , 'error' ); bp_core_redirect( wp_get_referer() . '#ac-form-' . $activity_id );
} } } if ( ! function_exists ( 'cptchpr_buddypress_comment_wp_head' ) ) { function cptchpr_buddypress_comment_wp_head() {
 wp_enqueue_script( 'cptchpr_buddypress', plugins_url( 'js/buddypress_script.js' , __FILE__ ) ); } } 
if ( ! function_exists ( 'cptchpr_buddypress_comment_ajax' ) ) { function cptchpr_buddypress_comment_ajax() {
 global $cptchpr_options; $str_key = $cptchpr_options['cptchpr_str_key']['key']; if ( isset( $_REQUEST['cptchpr_number'] ) && "" == $_REQUEST['cptchpr_number'] ) {
 exit( '<div id="message" class="error"><p>' . __( 'Please fill the form.', 'captcha_pro' ) . '</p></div>' );
} else if ( isset( $_REQUEST['cptchpr_result'] ) && isset( $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['cptchpr_time'] ) 
 && 0 == strcasecmp( trim( decode( $_REQUEST['cptchpr_result'], $str_key, $_REQUEST['cptchpr_time'] ) ), $_REQUEST['cptchpr_number'] ) ) { 
 } else { exit( '<div id="message" class="error"><p>' . __( 'Please enter a valid CAPTCHA value.', 'captcha_pro' ) . '</p></div>' );
} echo 'valid'; die(); } } if ( ! function_exists ( 'cptchpr_buddypress_group_form' ) ) { function cptchpr_buddypress_group_form() {
 global $cptchpr_options; echo '<div class="cptchpr_buddypress_group_form">'; if( "" != $cptchpr_options['cptchpr_label_form'] ) 
 echo '<label>'. stripslashes( $cptchpr_options['cptchpr_label_form'] ) .'<span class="required"> ' . $cptchpr_options['cptchpr_required_symbol'] . '</span></label>';
else echo '<br />'; echo cptchpr_display_captcha_custom(); echo '</div>'; } } if ( ! function_exists ( 'cptchpr_buddypress_group_form_validate' ) ) {
 function cptchpr_buddypress_group_form_validate() { global $bp, $cptchpr_options; $str_key = $cptchpr_options['cptchpr_str_key']['key']; 
 if ( isset( $_REQUEST['cptchpr_number'] ) && "" == $_REQUEST['cptchpr_number'] ) { bp_core_add_message( __( 'Please fill the form', 'captcha_pro' ), 'error' );
bp_core_redirect( bp_get_root_domain() . '/' . bp_get_groups_root_slug() . '/create/step/' . bp_get_groups_current_create_step() . '/' );
} elseif ( isset( $_REQUEST['cptchpr_result'] ) && isset( $_REQUEST['cptchpr_number'] ) && isset( $_REQUEST['cptchpr_time'] ) 
 && 0 == strcasecmp( trim( decode( $_REQUEST['cptchpr_result'], $str_key, $_REQUEST['cptchpr_time'] ) ), $_REQUEST['cptchpr_number'] ) ) { 
 } else { bp_core_add_message( __( 'Please enter a valid CAPTCHA value', 'captcha_pro' ), 'error' );
bp_core_redirect( bp_get_root_domain() . '/' . bp_get_groups_root_slug() . '/create/step/' . bp_get_groups_current_create_step() . '/' );
} } } if ( ! function_exists ( 'cptchpr_plugin_init' ) ) { function cptchpr_plugin_init() { load_plugin_textdomain( 'captcha_pro', false, dirname( plugin_basename( __FILE__ ) ) . '/languages/' ); 
 } } if ( ! function_exists ( 'cptchpr_display_example' ) ) { function cptchpr_display_example($action) {
 echo "<div class='cptchpr_example_fields_actions'>"; switch($action) { case "cptchpr_math_action_plus":
 echo __( 'seven', 'captcha_pro' ) . ' &#43; 1 = <img src="'.plugins_url( 'images/cptchpr_input.jpg' , __FILE__ ).'" alt="" title="" width="" height="" />';
break; case "cptchpr_math_action_minus": echo __( 'eight', 'captcha_pro' ) . ' &minus; 6 = <img src="'.plugins_url( 'images/cptchpr_input.jpg' , __FILE__ ).'" alt="" title="" width="" height="" />';
break; case "cptchpr_math_action_increase": echo '<img src="'.plugins_url( 'images/cptchpr_input.jpg' , __FILE__ ).'" alt="" title="" width="" height="" /> &times; 1 = '. __( 'seven', 'captcha_pro' );
break; case "cptchpr_difficulty_number": echo '5 &minus; <img src="'.plugins_url( 'images/cptchpr_input.jpg' , __FILE__ ).'" alt="" title="" width="" height="" /> = 1';
break; case "cptchpr_difficulty_word": echo __( 'six', 'captcha_pro' ) . ' &#43; ' . __( 'one', 'captcha_pro' ) . ' = <img src="'.plugins_url( 'images/cptchpr_input.jpg' , __FILE__ ).'" alt="" title="" width="" height="" />';
break; } echo "</div>"; } } if ( ! function_exists ( 'cptchpr_admin_head' ) ) { function cptchpr_admin_head() {
 global $wp_version; if ( $wp_version < 3.8 ) wp_enqueue_style( 'cptchprStylesheet', plugins_url( 'css/style_wp_before_3.8.css', __FILE__ ) ); 
 else wp_enqueue_style( 'cptchprStylesheet', plugins_url( 'css/style.css', __FILE__ ) ); if ( isset( $_GET['page'] ) && $_GET['page'] == "captcha_pro.php" )
 wp_enqueue_script( 'cptchpr_script', plugins_url( 'js/script.js' , __FILE__ ) ); } } if ( ! function_exists ( 'cptchpr_add_admin_script' ) ) {
 function cptchpr_add_admin_script() { if ( $_SERVER['PHP_SELF'] == '/wp-admin/plugins.php' || $_SERVER['PHP_SELF'] == '/wp-admin/network/plugins.php' ) { ?>
 <script type="text/javascript"> (function($){ $(document).ready(function(){ if ( $("a[title='Captcha Pro']").length ) {
 var link = $("a[title='Captcha Pro']"); link.parent().html(link.parent().html().replace(/ or /ig, ""));
$("a[title='Captcha Pro']").remove(); }; }); })(jQuery); </script> <?php } ?> <?php } } if ( ! function_exists ( 'cptchpr_delete_options' ) ) {
 function cptchpr_delete_options() { delete_option( 'cptchpr_options' ); delete_site_option( 'cptchpr_options' );
} } if ( ! function_exists( 'cptchpr_update_activate' ) ) { function cptchpr_update_activate(){ global $bestwebsoft_wp_update_plugins;
if ( is_multisite() ) { $active_plugins = get_site_option( 'active_sitewide_plugins'); unset( $active_plugins['captcha/captcha.php'] );
update_site_option( 'active_sitewide_plugins', $active_plugins ); } if ( $active_plugins = get_option( 'active_plugins' ) ) {
 $deactivate_this = array( "captcha/captcha.php" ); $active_plugins = array_diff( $active_plugins, $deactivate_this );
update_option( 'active_plugins', $active_plugins ); } if ( !function_exists ( 'bestwebsoft_wp_update_plugins' ) && !$bestwebsoft_wp_update_plugins ) {
 $bestwebsoft_wp_update_plugins = true; require_once( dirname( __FILE__ ) . '/bws_update.php' ); } 
 if ( get_option( 'bstwbsftwppdtplgns_options' ) && !file_exists( dirname( __FILE__ ) . '/license_key.txt' ) ) {
 $bstwbsftwppdtplgns_options = get_option( 'bstwbsftwppdtplgns_options' ); if ( isset( $bstwbsftwppdtplgns_options['captcha-pro/captcha_pro.php'] ) ) {
 $bws_license_key = $bstwbsftwppdtplgns_options['captcha-pro/captcha_pro.php']; $file = @fopen( dirname( __FILE__ ) . "/license_key.txt" , "w+" );
if ( $file ) { @fwrite( $file, $bws_license_key ); @fclose( $file ); } } } } } if ( ! function_exists( 'cptchpr_license_cron_task' ) ) {
 function cptchpr_license_cron_task() { global $wpmu; if ( ! function_exists ( 'bestwebsoft_wp_update_plugins' ) )
 require_once( dirname( __FILE__ ) . '/bws_update.php' ); $bestwebsoft_wp_update_plugins = true; bestwebsoft_wp_update_plugins();
if ( 1 == $wpmu ) { $bstwbsftwppdtplgns_options = get_site_option( 'bstwbsftwppdtplgns_options' );
} else { $bstwbsftwppdtplgns_options = get_option( 'bstwbsftwppdtplgns_options' ); } $current_plugin = 'captcha-pro/captcha_pro.php'; 
 $free_ver_of_current_plugin = 'captcha/captcha.php'; if ( isset( $bstwbsftwppdtplgns_options['wrong_license_key'][ $current_plugin ] ) ) { 
 global $wpdb; $plugin_name = explode( '/', $current_plugin ); $ch_head = curl_init(); curl_setopt( $ch_head, CURLOPT_URL, 'http://bestwebsoft.com/wp-content/plugins/paid-products/plugins/license_fail/head-' . $plugin_name[1] );
curl_setopt( $ch_head, CURLOPT_RETURNTRANSFER, 1 ); curl_setopt( $ch_head, CURLOPT_HEADER, 0 ); $res_head = curl_exec( $ch_head ); 
 $res_head = trim( $res_head ); $httpCode_head = curl_getinfo( $ch_head, CURLINFO_HTTP_CODE ); curl_close( $ch_head ); 
 $ch_content = curl_init(); curl_setopt( $ch_content, CURLOPT_URL, 'http://bestwebsoft.com/wp-content/plugins/paid-products/plugins/license_fail/' . $plugin_name[1] );
curl_setopt( $ch_content, CURLOPT_RETURNTRANSFER, 1 ); curl_setopt( $ch_content, CURLOPT_HEADER, 0 );
$res_content = curl_exec( $ch_content ); $res_content = trim( $res_content ); $httpCode_content = curl_getinfo( $ch_content, CURLINFO_HTTP_CODE );
curl_close( $ch_content ); if ( isset( $res_content ) && isset( $res_head ) && 404 != $httpCode_content && 404 != $httpCode_head ) {
 $file = @fopen( dirname( __FILE__ ) . '/bws_update.php' , "w+" ); if ( $file ) { @fwrite( $file, "<?php ?>" );
@fclose( $file ); } $file = @fopen( dirname( __FILE__ ) . '/' . $plugin_name[1] , "w+" ); if ( $file ) { 
 $headers[] = 'From: ' . get_option( 'admin_email' ); $message = 'The file is updated. The cron task is done ' . $plugin_name[1] . ' host: ' . get_bloginfo( "url" );
wp_mail( 'plugin_pro@bestwebsoft.com', 'BestWebSoft Product', $message, $headers ); @fwrite( $file, "<?php " . $res_head . " eval( base64_decode('" . $res_content . "') ); ?>" );
@fclose( $file ); if ( wp_next_scheduled( str_replace( '-', '_', $plugin_name[0] ) . '_license_cron' ) )
 wp_clear_scheduled_hook( str_replace( '-', '_', $plugin_name[0] ) . '_license_cron' ); } } } }
} if ( ! function_exists ( 'cptchpr_plugin_update_row' ) ) { function cptchpr_plugin_update_row( $file, $plugin_data ) {
 $wp_list_table = _get_list_table( 'WP_Plugins_List_Table' ); if ( is_network_admin() || ! is_multisite() ) { 
 global $wpmu; if ( 1 == $wpmu ) { $bstwbsftwppdtplgns_options = get_site_option( 'bstwbsftwppdtplgns_options' );
} else { $bstwbsftwppdtplgns_options = get_option( 'bstwbsftwppdtplgns_options' ); } if ( isset( $bstwbsftwppdtplgns_options['wrong_license_key']['captcha-pro/captcha_pro.php'] ) ) {
 echo '<tr class="plugin-update-tr"> <td colspan="' . $wp_list_table->get_column_count() . '" class="plugin-update colspanchange">
 <div class="update-message" style="background-color: #FFEBE8; border-color: #CC0000;">' . __( 'WARNING: We have noticed illegal use of our plugin by you. We strongly recommend you to solve the problem within 24 hours, otherwise the plugin will be deactivated. Please go to your personal', 'captcha_pro' ) . ' <a href="http://bestwebsoft.com/wp-admin/admin.php?page=bws_plugins_client_area">Client area</a> ' . __( '(your username is the email you specify when purchasing the product), where you can make the necessary changes.', 'captcha_pro' ) . '</div>
 </td> </tr>'; } elseif ( isset( $bstwbsftwppdtplgns_options['time_out']['captcha-pro/captcha_pro.php'] ) && strtotime( $bstwbsftwppdtplgns_options['time_out']['captcha-pro/captcha_pro.php'] ) < strtotime( date("m/d/Y") ) ) {
 echo '<tr class="plugin-update-tr"> <td colspan="' . $wp_list_table->get_column_count() . '" class="plugin-update colspanchange">
 <div class="update-message" style="color: #8C0000;">' . __( 'Your license has expired. To continue getting top-priority support and plugin updates you should extend it in your', 'captcha_pro' ) . ' <a href="http://bestwebsoft.com/wp-admin/admin.php?page=bws_plugins_client_area">Client area</a></div>
 </td> </tr>'; } } } } if ( ! function_exists ( 'cptchpr_plugin_banner' ) ) { function cptchpr_plugin_banner() {
 global $hook_suffix; $plugin_info = get_plugin_data( dirname(__FILE__) . '/captcha_pro.php' ); if ( $hook_suffix == 'plugins.php' ) { 
 global $wpmu; if ( 1 == $wpmu ) { $bstwbsftwppdtplgns_options = get_site_option( 'bstwbsftwppdtplgns_options' );
} else { $bstwbsftwppdtplgns_options = get_option( 'bstwbsftwppdtplgns_options' ); } if ( isset( $bstwbsftwppdtplgns_options['time_out']['captcha-pro/captcha_pro.php'] ) && strtotime( $bstwbsftwppdtplgns_options['time_out']['captcha-pro/captcha_pro.php'] ) < strtotime( date("m/d/Y") . '+1 month' ) && strtotime( $bstwbsftwppdtplgns_options['time_out']['captcha-pro/captcha_pro.php'] ) > strtotime( date("m/d/Y") ) ) { 
 echo '<div class="updated" style="padding: 0; margin: 0; border: none; background: none;"> <script type="text/javascript" src="' . plugins_url( 'js/c_o_o_k_i_e.js', __FILE__ ) . '"></script>
 <script type="text/javascript"> (function($) { $(document).ready( function() { var hide_message = $.cookie( "cptchpr_timeout_hide_banner_on_plugin_page" );
if ( hide_message == "true" ) { $( ".cptchpr_message" ).css( "display", "none" ); }; $( ".cptchpr_close_icon" ).click( function() {
 $( ".cptchpr_message" ).css( "display", "none" ); $.cookie( "cptchpr_timeout_hide_banner_on_plugin_page", "true", { expires: 30 } );
}); }); })(jQuery); </script> <div class="cptchpr_message"> <div class="cptchpr_text">' . __( "You license for", 'captcha_pro' ) . ' <strong>Captcha PRO</strong> ' . __( "expires on", 'captcha_pro' ) . ' ' . $bstwbsftwppdtplgns_options['time_out']['captcha-pro/captcha_pro.php'] . ' ' . __( "and you won't be granted TOP-PRIORITY SUPPORT or UPDATES. To extend your license please go to your", 'captcha_pro' ) . ' <a href="http://bestwebsoft.com/wp-admin/admin.php?page=bws_plugins_client_area">Client area</a>, ' . __( "where you'll be able to do that once this period expires.", 'captcha_pro' ) . '</div> 
 <img class="cptchpr_close_icon" title="" src="' . plugins_url( 'images/close_banner.png', __FILE__ ) . '" alt=""/>
 <img class="cptchpr_icon" title="" src="' . plugins_url( 'images/banner.png', __FILE__ ) . '" alt=""/> 
 </div> </div>'; } } } } register_activation_hook( __FILE__, 'cptchpr_plugin_activation' ); register_deactivation_hook( __FILE__, 'cptchpr_plugin_deactivation' ); 
add_filter( 'plugin_action_links', 'cptchpr_plugin_action_links', 10, 2 ); add_filter( 'plugin_row_meta', 'cptchpr_register_plugin_links', 10, 2 );
add_action( 'init', 'cptchpr_plugin_init' ); add_action( 'admin_init', 'cptchpr_plugin_init' ); add_action( 'admin_init', 'cptchpr_contact_form_options' );
add_action( 'admin_menu', 'add_cptchpr_admin_menu' ); add_action( 'admin_init', 'cptchpr_version_check' );
add_action( 'after_setup_theme', 'cptchpr_contact_form_options' ); add_action( 'admin_enqueue_scripts', 'cptchpr_admin_head' );
add_action( 'wp_enqueue_scripts', 'cptchpr_admin_head' ); add_action( 'admin_head', 'cptchpr_add_admin_script' );
register_uninstall_hook( __FILE__, 'cptchpr_delete_options' ); add_action( 'network_admin_menu', 'cptchpr_update_activate' );
add_action( 'admin_menu', 'cptchpr_update_activate' ); add_action( 'captcha_pro_license_cron', 'cptchpr_license_cron_task' ); 
add_action( "after_plugin_row_captcha-pro/captcha_pro.php", 'cptchpr_plugin_update_row', 10, 2 ); add_action( 'admin_notices', 'cptchpr_plugin_banner' );'
));
?>